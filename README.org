#+TITLE: thi.ng/ws-ldn-4

[[./assets/ws-ldn-4-synth.jpg]]

* Contents                                                         :toc_3_gh:
 - [[#diy-synth--gui-workshop-with-stm32f7-arm-cortex-m7][DIY Synth & GUI workshop with STM32F7 (ARM Cortex-M7)]]
     - [[#overview][Overview]]
     - [[#status][Status]]
     - [[#examples--exercises][Examples / exercises]]
         - [[#ex01---hello-blinky][ex01 - Hello Blinky]]
         - [[#ex02---timers--interrupts][ex02 - Timers & interrupts]]
         - [[#ex03---lcd-multitouch--gui][ex03 - LCD, multitouch & GUI]]
         - [[#ex04---synth-dsp--gui][ex04 - Synth, DSP & GUI]]
     - [[#building-the-exercises][Building the exercises]]
     - [[#other-tools][Other tools]]
     - [[#license][License]]

* DIY Synth & GUI workshop with STM32F7 (ARM Cortex-M7)

** Overview

[[https://www.youtube.com/watch?v=3lL-ZxyrHiE][Video documentation]]

** Status

Stable

** Examples / exercises

*** ex01 - Hello Blinky

Simple LED blink example and GPIO (push button) handling, polling vs.
EXTI interrupt

*** ex02 - Timers & interrupts

Introduction to timers, configuration and custom interrupt handlers.
Useful for basic multi-tasking.

*** ex03 - LCD, multitouch & GUI

Introduction to LCD driver, HAL BSP drawing functionality, state
machines, GUI components & multi-touch handling. Press blue user
button to switch between modules.

*** ex04 - Synth, DSP & GUI

Complete synth, GUI controls & timer integration. See video above.

**** Oscillator types

Oscillator types are set via the following 3-bit patterns:

| *Spiral* | *Sin* | *Square* | *Saw* | *Sawsin* | *Tri* | *String* |
|----------+-------+----------+-------+----------+-------+----------|
| [ ]      | [x]   | [ ]      | [x]   | [ ]      | [x]   | [ ]      |
| [ ]      | [ ]   | [x]      | [x]   | [ ]      | [ ]   | [x]      |
| [ ]      | [ ]   | [ ]      | [ ]   | [x]      | [x]   | [x]      |

**** Filter types

Filter types are set via the following 2-bit patterns:

| *LPF* | *HPF* | *BPF* | *PEQ* |
|-------+-------+-------+-------|
| [ ]   | [x]   | [ ]   | [x]   |
| [ ]   | [ ]   | [x]   | [x]   |

This demo only makes use of biquad filters, though other filter types
are possible (IIR, Formant, 4pole...)

** Building the exercises

This repo contains a complete Eclipse CDT project and can be built
with [[http://gnuarmeclipse.github.io][GNU ARM Eclipse]] plugin. Furthermore, the [[https://launchpad.net/gcc-arm-embedded][ARM GCC toolchain]] is
required outside Eclipse.

Within the project, you can find several build configurations, one per
example/exercise. Build profiles can be switched by clicking on the
little triangle next to the hammer (build) icon in the main toolbar.
Once a profile has been built, you'll find the resulting =.bin= file
in the profile's subfolder of this project. E.g. =ex04='s binary will
be located in ={$PROJECT_DIR}/ex04/ws-ldn-4.bin=.

The STM32F746-DISCO board is mbed enabled and therefore can be
programmed/flashed via simple drag & drop. Simply move a =.bin= file
onto the USB volume the board shows up as in OSX Finder or Windows
Explorer. Under Linux, please use the [[https://github.com/texane/stlink][st-flash]] tool and invoke like this:

#+BEGIN_SRC bash
cd ws-ldn-4
st-flash --reset write ex04/ws-ldn-4.bin 0x8000000
#+END_SRC

** Other tools

- [[http://www.g200kg.com/en/software/knobman.html][jKnobMan]]
- [[./tools/RawImage/RawImage.pde][PNG to C array conversion]] (Processing sketch in =/tools= folder)

** License

This project is open source and licensed under the [[http://www.apache.org/licenses/LICENSE-2.0][Apache Software License 2.0]].
